# This is a basic workflow to help you get started with Actions

name: CI

env:
  codeline:       "r20.2"
  docker:         "ppiorunski/p4api.net-unitest"

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-2016

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Login to docker hub
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }}| docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Get p4api and p4 binary
        run: |
          $WebClient = New-Object System.Net.WebClient ; $WebClient.DownloadFile("ftp://ftp.perforce.com/perforce/$env:codeline/bin.ntx64/p4api_vs2017_dyn_openssl1.1.1.zip","p4api.zip")
          Expand-Archive -Path p4api.zip ;  Move-Item -path p4api\*\* p4api\
          $WebClient = New-Object System.Net.WebClient ; $WebClient.DownloadFile("ftp://ftp.perforce.com/perforce/$env:codeline/bin.ntx64/p4d.exe", "p4d.exe")
          dir
          pwd
          dir p4api
          copy-item -force ${{ github.workspace }}\openssl-libs\*  ${{ github.workspace }}\p4api\lib\
          p4api.net\NuGet.exe restore p4api.net.sln

      - name: Get docker image
        run: docker pull $Env:docker

      - name: Run p4api.net unit tests
        run: |
          docker run -v ${{ github.workspace }}:c:\mount $Env:docker c:\test\test.net-unit.ps1
